{"ast":null,"code":"import { Rectangle } from 'src/app/models/rectangle';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/rectangle.service\";\nexport class RectangleComponent {\n  constructor(rectangleService) {\n    this.rectangleService = rectangleService;\n    this.rectangle = new Rectangle();\n    this.resizing = false;\n    this.initialX = 0;\n    this.initialY = 0;\n    this.initialWidth = 0;\n    this.initialHeight = 0;\n  }\n  ngOnInit() {\n    this.rectangleService.GetRectangle().subscribe(result => {\n      if (result.success) {\n        this.rectangle = result.data;\n        return;\n      }\n      alert(result.error);\n    });\n  }\n  onResizeStart(event) {\n    this.resizing = true;\n    this.initialX = event.clientX;\n    this.initialY = event.clientY;\n  }\n  onResize(event) {\n    if (!this.resizing) {\n      return;\n    }\n    this.rectangle.width = this.rectangle.width + event.clientX - this.initialX;\n    this.rectangle.height = this.rectangle.height + event.clientY - this.initialY;\n    this.CalculatePerimeter();\n    this.initialX = event.clientX;\n    this.initialY = event.clientY;\n  }\n  CalculatePerimeter() {\n    this.rectangle.perimeter = 2 * (this.rectangle.width + this.rectangle.height);\n  }\n  resizeStop(event) {\n    if (!this.resizing) {\n      return;\n    }\n    this.resizing = false;\n    this.rectangleService.SaveRectangle(this.rectangle).subscribe(result => {\n      if (result.success) {\n        this.rectangle = result.data;\n      }\n    });\n  }\n}\nRectangleComponent.ɵfac = function RectangleComponent_Factory(t) {\n  return new (t || RectangleComponent)(i0.ɵɵdirectiveInject(i1.RectangleService));\n};\nRectangleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RectangleComponent,\n  selectors: [[\"app-rectangle\"]],\n  hostBindings: function RectangleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousemove\", function RectangleComponent_mousemove_HostBindingHandler($event) {\n        return ctx.onResize($event);\n      }, false, i0.ɵɵresolveWindow)(\"mouseup\", function RectangleComponent_mouseup_HostBindingHandler($event) {\n        return ctx.resizeStop($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  decls: 5,\n  vars: 5,\n  consts: [[1, \"rectangle-container\"], [1, \"rectangle\"], [3, \"mousedown\"], [1, \"perimeter\"]],\n  template: function RectangleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 1)(2, \"rect\", 2);\n      i0.ɵɵlistener(\"mousedown\", function RectangleComponent_Template__svg_rect_mousedown_2_listener($event) {\n        return ctx.onResizeStart($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.rectangle.width)(\"height\", ctx.rectangle.height);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.rectangle.width)(\"height\", ctx.rectangle.height);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" Perimeter: \", ctx.rectangle.perimeter, \" \");\n    }\n  },\n  styles: [\".rectangle-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;width:100%;margin-top:20px}rect[_ngcontent-%COMP%]{resize:both}.rectangle[_ngcontent-%COMP%]{border:1px solid black}.perimeter[_ngcontent-%COMP%]{margin-left:20px;font-weight:700}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}